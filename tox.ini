[tox]
envlist = py39, py310, py311, py312, lint, typing, security, integration, all
isolated_build = true
skip_missing_interpreters = true
skipsdist = false

[testenv]
description = Run tests with coverage
deps =
    pytest
    coverage
    tzdata
    django
    sqlalchemy
commands =
    pip install -e .
    pytest --tb=short --disable-warnings
    coverage run --branch -m pytest --tb=short --disable-warnings
    coverage report -m
    coverage html

[testenv:lint]
description = Run code format and lint checks
skip_install = true
deps =
    black
    pylint
commands =
    black --check --diff src tests
    pylint src --ignore=integrations --disable=R0903

[testenv:typing]
description = Run static type checks
skip_install = true
deps =
    mypy
    pytest
    django
    sqlalchemy
commands =
    mypy src tests --ignore-missing-imports

[testenv:security]
description = Run security scans
skip_install = true
deps =
    bandit
    pip-audit
commands =
    bandit -r src
    pip-audit

[testenv:integration]
description = Run integration tests only
deps =
    tzdata
    django
    sqlalchemy
commands =
    pip install -e .[test]
    pytest tests/integration/ -v

[testenv:docs]
deps =
    sphinx
    myst-parser
commands =
    sphinx-apidoc -o docs/source src/eones --force --no-toc --module-first
    python -c "import os, glob; [os.remove(f) for f in glob.glob('docs/source/*.md') if os.path.basename(f) not in ['readme.md', 'changelog.md', 'license.md']]"
    python -c "import os; os.makedirs('docs/source/examples', exist_ok=True)"
    python -c "import shutil; shutil.copy('README.md', 'docs/source/readme.md')"
    python -c "import shutil; shutil.copy('CHANGELOG.md', 'docs/source/changelog.md')"
    python -c "import shutil; shutil.copy('LICENSE.md', 'docs/source/license.md')"
    python -c "import shutil; shutil.copy('examples/basic_usage.md', 'docs/source/examples/basic_usage.md')"
    python -c "import shutil; shutil.copy('examples/advanced_usage.md', 'docs/source/examples/advanced_usage.md')"
    python -c "import shutil; shutil.copy('examples/complete_deltas.md', 'docs/source/examples/complete_deltas.md')"
    python -c "import shutil; shutil.copy('examples/error_handling.md', 'docs/source/examples/error_handling.md')"
    python -c "import shutil; shutil.copy('examples/formatting_serialization.md', 'docs/source/examples/formatting_serialization.md')"
    python -c "import shutil; shutil.copy('examples/use_cases.md', 'docs/source/examples/use_cases.md')"
    python -c "import shutil; shutil.copy('examples/week_configuration.md', 'docs/source/examples/week_configuration.md')"
    sphinx-build -b html docs/source docs/_build/html

[testenv:format]
description = Apply code formatting
skip_install = true
deps =
    black
commands =
    black src tests

[testenv:all]
description = Run everything (tests, lint, typing, security, integration)
deps =
    pytest
    coverage
    tzdata
    django
    sqlalchemy
    black
    pylint
    mypy
    bandit
    pip-audit
commands =
    # Install package
    pip install -e .
    # Run tests first
    pytest --tb=short --disable-warnings
    coverage run --branch -m pytest --tb=short --disable-warnings
    coverage report -m
    # Lint
    black --check --diff src tests
    pylint src --ignore=integrations --disable=R0903
    # Typing
    mypy src tests
    # Security
    bandit -r src
    pip-audit
    # Integration
    pytest tests/integration/ -v
